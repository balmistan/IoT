Client: Docker Engine - Community
 Version:           25.0.2
 API version:       1.44
 Go version:        go1.21.6
 Git commit:        29cf629
 Built:             Thu Feb  1 00:23:21 2024
 OS/Arch:           linux/arm64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          25.0.2
  API version:      1.44 (minimum version 1.24)
  Go version:       go1.21.6
  Git commit:       fce6e0c
  Built:            Thu Feb  1 00:23:21 2024
  OS/Arch:          linux/arm64
  Experimental:     false
 containerd:
  Version:          1.6.28
  GitCommit:        ae07eda36dd25f8a1b98dfbf587313b99c0190bb
 runc:
  Version:          1.1.12
  GitCommit:        v1.1.12-0-g51d5e94
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0

================================================================================

To run Docker as a non-privileged user, consider setting up the
Docker daemon in rootless mode for your user:

    dockerd-rootless-setuptool.sh install

Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.


To run the Docker daemon as a fully privileged service, but granting non-root
users access, refer to https://docs.docker.com/go/daemon-access/

WARNING: Access to the remote API on a privileged Docker daemon is equivalent
         to root access on the host. Refer to the 'Docker daemon attack surface'
         documentation for details: https://docs.docker.com/go/attack-surface/

================================================================================


daniele@raspberrypi:~ $ sudo docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
478afc919002: Pull complete 
Digest: sha256:4bd78111b6914a99dbc560e6a20eab57ff6655aea4a80c50b0c5491968cbc2e6
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (arm64v8)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/


NODE RED


sudo mkdir /usr/sbin/node_red_data
sudo chown -R 1000:1000 /usr/sbin/node_red_data
sudo docker run -it -p 1880:1880 --restart=always -v /usr/sbin/node_red_data:/data --name mynodered nodered/node-red:latest



MOSQUITTO:
cd /usr/sbin && \
sudo mkdir -p mosquitto/log && \
sudo mkdir -p mosquitto/data && \
sudo mkdir -p mosquitto/config && \
sudo echo "admin:dalisan19780" > mosquitto/password.txt && \
sudo chown -R 1883:1883 mosquitto/ && \
sudo nano mosquitto/config/mosquitto.conf


sudo docker run -it -p 1883:1883 -p 9001:9001 \
 --name mqtt-broker --restart=always \
 -v /usr/sbin/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf \
 eclipse-mosquitto:latest



sudo ufw allow 1883

1707427447: Opening ipv4 listen socket on port 1883.
1707427447: Opening ipv6 listen socket on port 1883.
1707427447: Error: Address not available
1707427447: mosquitto version 2.0.18 running




Portainer:

docker run -it -p 9000:9000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest

sudo modprobe ipv6


MOSQUITTO con PASSWORD

sudo chown -R 1883:1883 /usr/sbin/mosquitto
sudo chmod -R 777 /usr/sbin/mosquitto

sudo docker run -it -p 1883:1883 -p 9001:9001 --name mqtt-broker --restart=always \
 -v /usr/sbin/mosquitto/config/mosquitto.passwd:/mosquitto/config/mosquitto.passwd \
 -v /usr/sbin/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf \
 -v /usr/sbin/mosquitto/data/:/mosquitto/data \
 -v /usr/sbin/mosquitto/log:/mosquitto/log \
 eclipse-mosquitto:latest



mosquitto_passwd -c /usr/sbin/mosquitto/config/mosquitto.passwd admin dalisan19780










